{"version":3,"sources":["components/layout/Header.js","components/pages/About.js","context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","branding","react_default","a","createElement","className","Link","to","defaultProps","About","Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","children","Component","Consumer","Contact","showContactInfo","showOnClick","deleteOnClick","delete","t0","_this2","_this$props$contact","name","email","phone","onClick","style","cursor","float","color","bind","marginRight","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","onSubmit","e","_this$state","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","background","EditContact","editedContact","match","params","put","NotFound","Test","title","body","fetch","then","response","json","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.51105efa.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = props => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <Link to=\"/\" className=\"navbar-brand\">\n          {branding}\n        </Link>\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link to=\"/\" className=\"nav-link\">\n              Home <i className=\"fas fa-home\" />\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to=\"/contact/add\" className=\"nav-link\">\n              Add <i className=\"fas fa-plus\" />\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to=\"/about\" className=\"nav-link\">\n              About <i className=\"fas fa-question\" />\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: \"My App\"\n};\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from \"react\";\n\nexport default function() {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contacts.</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nconst Context = React.createContext();\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n    case \"ADD_CONTACT\":\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n    case \"EDIT_CONTACT\":\n      return {\n        ...state,\n        // contacts: [\n        //   action.payload,\n        //   ...state.contacts.filter(contact => contact.id !== action.payload.id)\n        // ]\n        contacts: state.contacts.map(contact =>\n          contact.id === action.payload.id\n            ? (contact = action.payload)\n            : contact\n        )\n      };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => this.setState(state => reducer(state, action))\n  };\n  // componentDidMount() {\n  //   axios\n  //     .get(\"https://jsonplaceholder.typicode.com/users\")\n  //     .then(res => this.setState({ contacts: res.data }));\n  // }\n  async componentDidMount() {\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n\n    this.setState({ contacts: res.data });\n  }\n\n  render() {\n    return (\n      <div>\n        <Context.Provider value={this.state}>\n          {this.props.children}\n        </Context.Provider>\n      </div>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Consumer } from \"../../context\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n  showOnClick = () => {\n    this.setState({ showContactInfo: !this.state.showContactInfo });\n  };\n  // deleteOnClick = (id, dispatch) => {\n  //   axios\n  //     .delete(`https://jsonplaceholder.typicode.com/users/${id}`)\n  //     .then(res => dispatch({ type: \"DELETE_CONTACT\", payload: id }));\n  // };\n  deleteOnClick = async (id, dispatch) => {\n    try {\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\n    } catch (e) {\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\n    }\n  };\n\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {name}{\" \"}\n                <i\n                  onClick={this.showOnClick}\n                  className=\"fas fa-sort-down\"\n                  style={{ cursor: \"pointer\" }}\n                />\n                <i\n                  className=\"fas fa-times\"\n                  style={{ float: \"right\", cursor: \"pointer\", color: \"red\" }}\n                  onClick={this.deleteOnClick.bind(this, id, dispatch)}\n                />\n                <Link to={`/contact/edit/${id}`}>\n                  <i\n                    className=\"fas fa-pencil-alt\"\n                    style={{\n                      float: \"right\",\n                      cursor: \"pointer\",\n                      color: \"black\",\n                      marginRight: \"1rem\"\n                    }}\n                  />\n                </Link>\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">Email: {email}</li>\n                  <li className=\"list-group-item\">Phone: {phone}</li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n};\n\nexport default Contact;\n","import React, { Component } from \"react\";\nimport Contact from \"./Contact\";\nimport { Consumer } from \"../../context\";\n\nclass Contacts extends Component {\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n          return (\n            <React.Fragment>\n              <h1 className=\"display-4 mb-2\">\n                <span className=\"text-danger\">Contact</span> List\n              </h1>\n              {contacts.map(contact => (\n                <Contact key={contact.id} contact={contact} />\n              ))}\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Contacts;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        className={classnames(\"form-control form-control-lg\", {\n          \"is-invalid\": error\n        })}\n        name={name}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.defaultProps = {\n  type: \"text\"\n};\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\n\nexport default TextInputGroup;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from \"axios\";\n//import uuid from \"uuid\";\n\nclass AddContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required!\" } });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required!\" } });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is required!\" } });\n      return;\n    }\n\n    const newContact = {\n      name,\n      email,\n      phone,\n      errors: {}\n    };\n\n    const res = await axios.post(\n      `https://jsonplaceholder.typicode.com/users`,\n      newContact\n    );\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\n\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\"\n    });\n    this.props.history.push(\"/\");\n  };\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name:\"\n                    name=\"name\"\n                    value={name}\n                    placeholder=\"Enter Name...\"\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email:\"\n                    type=\"email\"\n                    name=\"email\"\n                    value={email}\n                    placeholder=\"Enter email...\"\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone:\"\n                    name=\"phone\"\n                    value={phone}\n                    placeholder=\"Enter Phone...\"\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Add Contact\"\n                    className=\"btn btn-light btn-block\"\n                    style={{ background: \"grey\" }}\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddContact;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from \"axios\";\n//import uuid from \"uuid\";\n\nclass EditContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n\n    const res = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n    const contact = res.data;\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    });\n  }\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    const { id } = this.props.match.params;\n\n    const editedContact = {\n      name,\n      email,\n      phone\n    };\n\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required!\" } });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required!\" } });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is required!\" } });\n      return;\n    }\n    const res = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      editedContact\n    );\n\n    dispatch({ type: \"EDIT_CONTACT\", payload: res.data });\n\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\"\n    });\n    this.props.history.push(\"/\");\n  };\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name:\"\n                    name=\"name\"\n                    value={name}\n                    placeholder=\"Enter Name...\"\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email:\"\n                    type=\"email\"\n                    name=\"email\"\n                    value={email}\n                    placeholder=\"Enter email...\"\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone:\"\n                    name=\"phone\"\n                    value={phone}\n                    placeholder=\"Enter Phone...\"\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Update Contact\"\n                    className=\"btn btn-light btn-block\"\n                    style={{ background: \"grey\" }}\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default EditContact;\n","import React from \"react\";\n\nexport default function NotFound() {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        <span className=\"text-danger\">404</span> Page Not Found\n      </h1>\n      <p className=\"lead\">Sorry, that page does not exsist.</p>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\n\nclass Test extends Component {\n  state = {\n    title: \"\",\n    body: \"\"\n  };\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/posts/1\")\n      .then(response => response.json())\n      .then(data => this.setState({ title: data.title, body: data.body }));\n  }\n  //   componentWillMount() {\n  //     console.log(\"will mount.\");\n  //   }\n  //   componentDidUpdate() {\n  //     console.log(\"did update.\");\n  //   }\n  //   componentWillUpdate() {\n  //     console.log(\"will update.\");\n  //   }\n  //   componentWillReceiveProps(nextProps, nextState) {\n  //     console.log(\"will receive props.\");\n  //   }\n  //   static getDerivedStateFromProps(nextProps, prevState) {\n  //     return null;\n  //   }\n  //   getSnapshotBeforeUpdate(prevProps, prevState) {\n  //     console.log(\"get snapshot before update.\");\n  //   }\n  render() {\n    const { title, body } = this.state;\n    return (\n      <div>\n        <h1>{title}</h1>\n        <p className=\"lead\">{body}</p>\n      </div>\n    );\n  }\n}\n\nexport default Test;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport { Provider } from \"./context\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport NotFound from \"./components/pages/NotFound\";\nimport Test from \"./components/test/Test\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div className=\"App\">\n          <Header branding=\"Contct Manager\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/contact/add\" component={AddContact} />\n              <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n              <Route exact path=\"/about\" component={About} />\n              <Route exact path=\"/test\" component={Test} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}